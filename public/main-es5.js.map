{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-friend/add-friend.component.ts","webpack:///src/app/components/add-friend/add-friend.component.html","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/dashboard/friend-details/friend-details.component.ts","webpack:///src/app/components/dashboard/friend-details/friend-details.component.html","webpack:///src/app/components/friend/friend.component.ts","webpack:///src/app/components/friend/friend.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/models/user.model.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/friend.service.ts","webpack:///src/app/services/token.interceptor.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AddFriendComponent","validateService","flashMessage","friendService","authService","router","user","name","email","password","validateRegister","show","cssClass","timeout","validateEmail","addAnonymFriend","subscribe","data","success","navigate","addFriend","DashboardComponent","getAllMyFriends","friends","users","err","console","log","friend","deleteFriend","res","filter","fr","_id","FriendDetailsComponent","emit","deleteOneFriend","FriendComponent","getAllUsers","it","friend_id","item","msg","HomeComponent","LoginComponent","isValidLogin","authenticateUser","storeUserData","token","loginUser","NavbarComponent","logout","ProfileComponent","getProfile","profile","isValideUpdate","updateUser","RegisterComponent","registerUser","AuthGuard","route","isLoggedIn","User","AuthService","http","ROOT_URL","headers","append","post","put","localStorage","setItem","JSON","stringify","authToken","getItem","get","clear","helper","loadToken","isTokenExpired","replace","parse","providedIn","FriendService","TokenInterceptor","auth","request","next","clone","setHeaders","Authorization","handle","ValidateService","undefined","re","test","age","race","food","family","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent }  from './components/home/home.component';\r\nimport { LoginComponent }  from './components/login/login.component';\r\nimport { RegisterComponent }  from './components/register/register.component';\r\nimport { DashboardComponent }  from './components/dashboard/dashboard.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { FriendComponent } from './components/friend/friend.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n{ path:'',component:HomeComponent},\r\n{ path:'login',component:LoginComponent},\r\n{ path:'register',component:RegisterComponent},\r\n{ path:'dashboard',component:DashboardComponent,canActivate:[AuthGuard]},\r\n{ path:'profile',component:ProfileComponent,canActivate:[AuthGuard]},\r\n{ path:'friend',component:FriendComponent,canActivate:[AuthGuard]},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'client';\r\n}\r\n","<app-navbar></app-navbar>\r\n\r\n<div class=\"container\" style=\"margin-top: 20px;\">\r\n  <flash-messages></flash-messages>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ValidateService } from './services/validate.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { FriendService } from './services/friend.service';\r\nimport { TokenInterceptor } from './services/token.interceptor';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\nimport { HttpClientModule }  from '@angular/common/http';\r\nimport {RouterModule} from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FriendComponent } from './components/friend/friend.component';\r\nimport { FriendDetailsComponent } from './components/dashboard/friend-details/friend-details.component';\r\nimport { AddFriendComponent } from './components/add-friend/add-friend.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    DashboardComponent,\r\n    ProfileComponent,\r\n    HomeComponent,\r\n    FriendComponent,\r\n    FriendDetailsComponent,\r\n    AddFriendComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n   FlashMessagesModule.forRoot(),\r\n   HttpClientModule,\r\n  ],\r\n  providers: [ValidateService,AuthService,AuthGuard,FriendService,\r\n  {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ValidateService} from '../../services/validate.service';\r\nimport { FriendService } from '../../services/friend.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'app-add-friend',\r\n  templateUrl: './add-friend.component.html',\r\n  styleUrls: ['./add-friend.component.css']\r\n})\r\nexport class AddFriendComponent implements OnInit {\r\n\r\n  name: String;\r\n  email: String;\r\n  password: String;\r\n\r\n\r\n  constructor(private validateService: ValidateService,\r\n  \t          private flashMessage:  FlashMessagesService,\r\n  \t          private friendService: FriendService,\r\n  \t          private authService: AuthService,\r\n              private router: Router) { \r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  \r\n  }\r\n\r\n  addFriend(){\r\n\r\n  \t const user={\r\n  \t \tname:this.name,\r\n  \t \temail:this.email,\r\n  \t \tpassword:this.password,\r\n  \t };\r\n\r\n  \tif(!this.validateService.validateRegister(user)) {\r\n      this.flashMessage.show('Veuillez entrer tous les champs', {cssClass: 'alert-danger', timeout: 3000});\r\n      return false;\r\n    }\r\n\r\n \r\n    if(!this.validateService.validateEmail(user.email)) {\r\n    this.flashMessage.show('Entrez une adresse mail valide', {cssClass: 'alert-danger', timeout: 3000});\r\n      return false;\r\n    }\r\n  \r\n\r\n   this.friendService.addAnonymFriend(user).subscribe((data:any)=> {\r\n       \r\n       if(data.success) {\r\n      this.flashMessage.show('Votre ami a été ajouté', {cssClass: 'alert-success', timeout: 3000});\r\n      this.router.navigate(['/dashboard']);\r\n    } else {\r\n      this.flashMessage.show('Erreur lors de la creation du compte', {cssClass: 'alert-danger', timeout: 3000});\r\n    }\r\n   });\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n   <div class=\"col-md-8 mx-auto\">\r\n   \t  \r\n\t\t<h2 class=\"page-header text-center text-primary\">Ajouter un ami</h2>\r\n\t\t<form (submit)=\"addFriend()\" >\r\n\t\t  <div class=\"form-group\">\r\n\t\t    <label for=\"name\">Nom</label>\r\n\t\t    <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Entrez votre nom\">\r\n\t\t  </div>\r\n\t\t  <div class=\"form-group\">\r\n\t\t    <label for=\"email\">Email</label>\r\n\t\t    <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Entrez votre email\">\r\n\t\t  </div>\r\n\t\t  <div class=\"form-group\">\r\n\t\t    <label for=\"password\">Mot de passe</label>\r\n\t\t    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\" Entrez le mot de passe\">\r\n\t\t  </div>\r\n\t\t <div class=\"form-group text-center\">\r\n\t\t \t <input type=\"submit\" class=\"btn btn-primary\" value=\"Creer son compte\">\r\n\t\t </div>\r\n\t\t</form>\r\n   </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FriendService } from '../../services/friend.service';\r\nimport { Router } from '@angular/router';\r\nimport {User } from '../../models/user.model'\r\nimport {Friend } from '../../models/friend.model'\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  friends:Array<Friend>;\r\n  user:User=new User();\r\n  constructor(private friendService:FriendService,private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  \tthis.friendService.getAllMyFriends().subscribe((data : any) => {\r\n      this.user = data.user;\r\n      this.friends = data.users;\r\n    },\r\n     err => {\r\n       console.log(err);\r\n       return false;\r\n     });\r\n\r\n  }\r\n\r\n  deleteFriend(friend:Friend){\r\n    \r\n     this.friendService.deleteFriend(friend).subscribe(res => {\r\n      \r\n      this.friends=this.friends.filter(fr => fr._id!=friend._id);\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"row\">\r\n\t<div class=\"col-md-9\">\r\n\t\t<h2 class=\"text-primary text-center\">Tous mes amis</h2 >\r\n\t\t\r\n\r\n\t\t<div class=\"row\">\r\n\t\t   <app-friend-details (deleteFriend)=\"deleteFriend($event)\" *ngFor=\"let friend of friends\" [friend]=\"friend\"></app-friend-details>\r\n\t\t</div>\r\n\r\n\r\n\t</div>\r\n\t<div class=\"col-md-3 mt-4\">\r\n\t\t\r\n\t\t<div class=\"list-group\">\r\n\t\t  <a  class=\"list-group-item list-group-item-action active\">\r\n\t\t   Nom:  {{ user.name }}\r\n\t\t  </a>\r\n\t\t  <a  class=\"list-group-item list-group-item-action\">Adresse mail: {{   user.email }}\r\n\t\t  </a>\r\n\t\t  <a  class=\"list-group-item list-group-item-action disabled\">Famille:{{   user.family }}\r\n\t\t  </a>\r\n\t\t  <a  class=\"list-group-item list-group-item-action disabled\">Age:<span class=\"badge badge-secondary\">{{   user.age }}</span>\r\n\t\t  </a>\r\n       </div>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit,Input,Output,EventEmitter } from '@angular/core';\r\nimport {Friend } from '../../../models/friend.model'\r\n\r\n@Component({\r\n  selector: 'app-friend-details',\r\n  templateUrl: './friend-details.component.html',\r\n  styleUrls: ['./friend-details.component.css']\r\n})\r\nexport class FriendDetailsComponent implements OnInit {\r\n\r\n  @Input() friend:Friend;\r\n  @Output() deleteFriend: EventEmitter<Friend> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  deleteOneFriend(friend){\r\n  \tthis.deleteFriend.emit(friend);\r\n  }\r\n\r\n}\r\n","<div class=\"col-md-6 my-2\" >\r\n\t<div class=\"card\" style=\"width: 18rem;\">\r\n\t\t\t \r\n\t\t\t  \r\n\t    <ul class=\"list-group list-group-flush\">\r\n\t\t\t    <li class=\"list-group-item\">Nom: {{friend.friend.name}}</li>\r\n\t\t\t    <li class=\"list-group-item\">Email: {{friend.friend.email}}</li>\r\n\t\t\t    <li class=\"list-group-item\">Famille: {{friend.friend.family}}</li>\r\n\t\t\t    <li class=\"list-group-item\">Age: {{friend.friend.age}}</li>\r\n\t\t\t    <li class=\"list-group-item\">Nourriture: {{friend.friend.food}}</li>\r\n\t\t\t    <li class=\"list-group-item\"><a (click)=\"deleteOneFriend(friend)\" class=\"card-link text-danger\" style=\"cursor: pointer;\">Supprimer</a></li>\r\n\t\t\t  </ul>\r\n\t\t\t  \r\n\t</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FriendService } from '../../services/friend.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport {User } from '../../models/user.model'\r\n\r\n@Component({\r\n  selector: 'app-friend',\r\n  templateUrl: './friend.component.html',\r\n  styleUrls: ['./friend.component.css']\r\n})\r\nexport class FriendComponent implements OnInit {\r\n\r\n  users:Array<User>;\r\n  user:User=new User();\r\n  constructor(private friendService:FriendService,\r\n              private router:Router,\r\n              private flashMessage:  FlashMessagesService,\r\n              private authService:AuthService,) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  \tthis.authService.getAllUsers().subscribe((data : any) => {\r\n      this.user = data.user;\r\n      this.users = data.users;\r\n      this.users= this.users.filter((it) => it._id!=this.user._id);\r\n    },\r\n     err => {\r\n       console.log(err);\r\n       return false;\r\n     });\r\n\r\n  }\r\n\r\n  addFriend(friend_id){\r\n  \tconst friend={\r\n  \t\tfriend:friend_id\r\n  \t};\r\n\r\n    this.friendService.addFriend(friend).subscribe((data :any) => {\r\n        if(data.success) {\r\n         this.flashMessage.show(\"Ami ajouté\", {cssClass: 'alert-success', timeout: 5000});\r\n         \r\n         this.users=this.users.filter((item) => item._id!= friend_id); \r\n        } else {\r\n          this.flashMessage.show(data.msg, {cssClass: 'alert-danger', timeout: 5000});\r\n          \r\n        }\r\n    });\r\n     \r\n  }\r\n\r\n  \r\n}\r\n","<div>\r\n\t<h3 class=\"text-center my-3 text-primary\">Tous les Pangolins inscrits</h3>\r\n\t<div *ngIf=\"users\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-md-4\" *ngFor=\"let item of users\">\r\n\t\t\t\t\t<div class=\"card border-light mb-3\" >\r\n\t\t\t\t\t<div class=\"card-header text-primary \">{{ item.name }}</div>\r\n\t\t\t\t\t<div class=\"card-body\">\r\n\t\t\t\t\t<!-- <h4 class=\"card-title \">Light card title</h4> -->\r\n\t\t\t\t\t<p class=\"card-text\">{{ item.email }}</p>\r\n\t\t\t\t\t<button class=\"btn btn-outline-primary\" (click)=\"addFriend(item._id)\">Ajouter à mes amis</button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col-md-12\">\r\n\t\t\t<!-- <h1>Ajouter un ami</h1> -->\r\n\t\t\t<app-add-friend></app-add-friend>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"jumbotron text-center\">\r\n  <h1>Application <span class=\"text-primary\" style=\"font-weight: bold;font-size: 50px;font-family: 'Rochester', cursive;\">Pangolin</span></h1>\r\n  <p class=\"lead\">Bienvenue sur le site de gestion du carnet d'adresse pour \"Pangolin\" </p>\r\n  <div>\r\n    <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">S'inscrire</a> <a class=\"btn btn-success ml-3\" [routerLink]=\"['/login']\">Se connecter</a>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-4\">\r\n    <h3>Express Backend</h3>\r\n    <p>Technologies Node.js/Express utilisé pour organiser le modèle de données et les requetes dans la base de données</p>\r\n  </div>\r\n  <div class=\"col-md-4\">\r\n    <h3>Angular-CLI</h3>\r\n    <p>Angular-CLI pour generer des composants,services. Un serveur local et une compilation rapide</p>\r\n  </div>\r\n  <div class=\"col-md-4\">\r\n    <h3>JWT Tokens</h3>\r\n    <p>Moyen d'authentification des utilisateurs. Connexion et sauvegarde des données utilisateur</p>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ValidateService} from '../../services/validate.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  \r\n  email:String;\r\n  password:String;\r\n  constructor(private validateService: ValidateService,\r\n  \t          private flashMessage:  FlashMessagesService,\r\n  \t          private authService: AuthService,\r\n                private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  loginUser(){\r\n\r\n  \t const user={\r\n  \t \temail:this.email,\r\n  \t \tpassword:this.password\r\n  \t };\r\n\r\n     if(!this.validateService.isValidLogin(user)){\r\n       this.flashMessage.show(\"Veuillez saisir le login et le mot de passe\",\r\n         {cssClass:'alert alert-danger',timeout:5000});\r\n       return false;\r\n     }\r\n\r\n     if(!this.validateService.validateEmail(user.email)) {\r\n    this.flashMessage.show('Entrez une adresse mail valide', {cssClass: 'alert-danger', timeout: 3000});\r\n      return false;\r\n    }\r\n\r\n  \t  this.authService.authenticateUser(user).subscribe((data :any) => {\r\n        if(data.success) {\r\n          this.authService.storeUserData(data.token, data.user);\r\n          this.flashMessage.show('Vous etes connecté', {cssClass: 'alert-success', timeout: 5000});\r\n          this.router.navigate(['/dashboard']);\r\n        } else {\r\n          this.flashMessage.show(data.msg, {cssClass: 'alert-danger', timeout: 5000});\r\n          this.router.navigate(['/login']);\r\n        }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n   <div class=\"col-md-6 mx-auto\">\r\n   \t  \r\n\t\t<h2 class=\"page-header text-center text-primary\">Connexion</h2>\r\n\t\t<form (submit)=\"loginUser()\" >\r\n\t\t  <div class=\"form-group\">\r\n\t\t    <label for=\"email\">Email</label>\r\n\t\t    <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Entrez votre email\">\r\n\t\t  </div>\r\n\t\t  <div class=\"form-group\">\r\n\t\t    <label for=\"password\">Mot de passe</label>\r\n\t\t    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\" Entrez le mot de passe\">\r\n\t\t  </div>\r\n\t\t  <input type=\"submit\" class=\"btn btn-primary\" value=\"Se connecter\">\r\n\t\t</form>\r\n   </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(private flashMessage:  FlashMessagesService,\r\n  \t          public authService: AuthService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logoutuser(){\r\n     \r\n    this.authService.logout();\r\n    this.flashMessage.show('Vous etes déconnecté', {\r\n      cssClass: 'alert-success', timeout: 3000\r\n    });\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" style=\"font-size: 15px;\">\r\n  <a class=\"navbar-brand text-primary\" routerLink=\"/\" style=\"font-weight: bold;font-size: 30px;font-family: 'Rochester', cursive;\">Pangolin</a>\r\n   <button class=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarColor03\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n    \r\n         <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\">\r\n\t        <a class=\"nav-link\"  [routerLinkActive]=\"['active']\" routerLink=\"/dashboard\"><i class=\"fas fa-user-friends mr-2\"></i>Mes amis</a>\r\n\t       </li>  \r\n         <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\">\r\n          <a class=\"nav-link\"  [routerLinkActive]=\"['active']\" routerLink=\"/profile\"><i class=\"fas fa-user mr-2\"></i>Profile</a>\r\n         </li> \r\n         <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\">\r\n          <a class=\"nav-link\"  [routerLinkActive]=\"['active']\" routerLink=\"/friend\"><i class=\"fas fa-search mr-2\"></i>Trouver des Amis</a>\r\n         </li>  \r\n     \r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav ml-auto\">\r\n\t      <li *ngIf=\"!authService.isLoggedIn()\" class=\"nav-item\">\r\n\t        <a class=\"nav-link\" [routerLinkActive]=\"['active']\" routerLink=\"/register\">S'inscrire</a>\r\n\t      </li>\r\n\t      <li *ngIf=\"!authService.isLoggedIn()\" class=\"nav-item\">\r\n\t        <a class=\"nav-link\" [routerLinkActive]=\"['active']\" routerLink=\"/login\">Se connecter</a>\r\n\t      </li>\r\n         <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLinkActive]=\"['active']\"  routerLink=\"/profile\">{{authService.getUsername().name}}</a>\r\n        </li>\r\n         <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLinkActive]=\"['active']\" (click)=\"logoutuser()\" href=\"#\"> <i class=\"fas fa-sign-out-alt mr-2\"></i>Se déconnecter</a>\r\n        </li>\r\n    </ul>\r\n    \r\n  </div>\r\n</nav>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ValidateService} from '../../services/validate.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport {User } from '../../models/user.model'\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  user:User=new User();\r\n  constructor(\r\n              private validateService: ValidateService,\r\n              private flashMessage:  FlashMessagesService,\r\n              private authService: AuthService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n     this.authService.getProfile().subscribe((profile : any) => {\r\n      this.user = profile.user;\r\n    },\r\n     err => {\r\n       console.log(err);\r\n       return false;\r\n     });\r\n  }\r\n\r\n  updateUser(){\r\n    \r\n      if(!this.validateService.isValideUpdate(this.user)){\r\n       this.flashMessage.show(\"Veuillez saisir les champs\",\r\n         {cssClass:'alert alert-danger',timeout:5000});\r\n       return false;\r\n     }\r\n\r\n     if(!this.validateService.validateEmail(this.user.email)) {\r\n    this.flashMessage.show('Entrez une adresse mail valide', {cssClass: 'alert-danger', timeout: 3000});\r\n      return false;\r\n    }\r\n\r\n      this.authService.updateUser(this.user).subscribe((data :any) => {\r\n        if(data.success) {\r\n         this.flashMessage.show(\"Compte modifié\", {cssClass: 'alert-success', timeout: 5000});\r\n          this.router.navigate(['/dashboard']);\r\n        } else {\r\n          this.flashMessage.show(data.msg, {cssClass: 'alert-danger', timeout: 5000});\r\n          \r\n        }\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n   <div class=\"col-md-10 mx-auto\">\r\n  <h2 class=\"text-center text-primary\">Modifier mon profile</h2>\r\n   \t  \r\n\t\t<form (submit)=\"updateUser()\" >\r\n\t\t  <div class=\"form-group\">\r\n\t\t    <label for=\"name\">Nom</label>\r\n\t\t    <input type=\"text\" [(ngModel)]=\"user.name\" name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Entrez votre nom\">\r\n\t\t  </div>\r\n\t\t  <div class=\"form-group\">\r\n\t\t    <label for=\"email\">Email</label>\r\n\t\t    <input type=\"email\" [(ngModel)]=\"user.email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Entrez votre email\">\r\n\t\t  </div>\r\n\r\n\t\t  <div class=\"row\">\r\n\t\t  \t<div class=\"col-md-6\">\r\n\t\t  \t\t <label for=\"email\">Age</label>\r\n\t\t    <input type=\"number\" [(ngModel)]=\"user.age\" name=\"age\" class=\"form-control\" id=\"age\"  placeholder=\"Age...\">\r\n\t\t  \t</div>\r\n\t\t  \t<div class=\"col-md-6\">\r\n\t\t  \t\t <label for=\"email\">Race</label>\r\n\t\t    <input type=\"text\" [(ngModel)]=\"user.race\" name=\"race\" class=\"form-control\" id=\"race\"  placeholder=\"Race...\">\r\n\t\t  \t</div>\r\n\t\t  </div>\r\n\r\n\t\t  <div class=\"row\">\r\n\t\t  \t<div class=\"col-md-6\">\r\n\t\t  \t\t <label for=\"email\">Famille</label>\r\n\t\t  \t\t<textarea name=\"family\" [(ngModel)]=\"user.family\" class=\"form-control\" placeholder=\"Famille...\"></textarea>\r\n\t\t  \t</div>\r\n\t\t  \t<div class=\"col-md-6\">\r\n\t\t  \t\t  <label for=\"email\">Nourriture</label>\r\n\t\t  \t\t<textarea name=\"food\" [(ngModel)]=\"user.food\" class=\"form-control\" placeholder=\"Nourriture...\"></textarea>\r\n\t\t  \t</div>\r\n\t\t  </div>\r\n\r\n\t\t  <div class=\"form-group mt-3\" align=\"center\">\r\n\t\t  \t<input type=\"submit\" class=\"btn btn-primary\" value=\"Modifier mon compte\">\r\n\t\t  </div>\r\n\t\t</form>\r\n   </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ValidateService} from '../../services/validate.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n \r\n\r\n  name: String;\r\n  email: String;\r\n  password: String;\r\n\r\n  constructor(private validateService: ValidateService,\r\n  \t          private flashMessage:  FlashMessagesService,\r\n  \t          private authService: AuthService,\r\n              private router: Router) { \r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  registerUser(){\r\n\r\n  \t const user={\r\n  \t \tname:this.name,\r\n  \t \temail:this.email,\r\n  \t \tpassword:this.password\r\n  \t };\r\n\r\n  \tif(!this.validateService.validateRegister(user)) {\r\n      this.flashMessage.show('Veuillez entrer tous les champs', {cssClass: 'alert-danger', timeout: 3000});\r\n      return false;\r\n    }\r\n\r\n \r\n    if(!this.validateService.validateEmail(user.email)) {\r\n    this.flashMessage.show('Entrez une adresse mail valide', {cssClass: 'alert-danger', timeout: 3000});\r\n      return false;\r\n    }\r\n\r\n     \r\n     this.authService.registerUser(user).subscribe((data :any) => {\r\n    if(data.success) {\r\n      this.flashMessage.show('Votre compte a été crée et vous pouvez vous connecter', {cssClass: 'alert-success', timeout: 3000});\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      this.flashMessage.show(data.msg, {cssClass: 'alert-danger', timeout: 3000});\r\n      this.router.navigate(['/register']);\r\n    }\r\n  });\r\n\r\n\r\n\r\n  }\r\n\r\n \r\n\r\n}\r\n","<div class=\"row\">\r\n   <div class=\"col-md-8 mx-auto\">\r\n   \t  \r\n\t\t<h2 class=\"page-header text-center text-primary\">Inscription</h2>\r\n\t\t<form (submit)=\"registerUser()\" >\r\n\t\t  <div class=\"form-group\">\r\n\t\t    <label for=\"name\">Nom</label>\r\n\t\t    <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Entrez votre nom\">\r\n\t\t  </div>\r\n\t\t  <div class=\"form-group\">\r\n\t\t    <label for=\"email\">Email</label>\r\n\t\t    <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Entrez votre email\">\r\n\t\t  </div>\r\n\t\t  <div class=\"form-group\">\r\n\t\t    <label for=\"password\">Mot de passe</label>\r\n\t\t    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\" Entrez le mot de passe\">\r\n\t\t  </div>\r\n\t\t  <input type=\"submit\" class=\"btn btn-primary\" value=\"Creer mon compte\">\r\n\t\t</form>\r\n   </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard{\r\n\r\n   constructor(private authService: AuthService,private route:Router)\r\n   {\r\n\r\n   }\r\n\r\n   canActivate(){\r\n\r\n   \tif(this.authService.isLoggedIn()){\r\n        return true;\r\n   \t}else{\r\n        \r\n        this.route.navigate(['login']);\r\n        return false;\r\n   \t}\r\n\r\n   }\r\n}","export class User{\r\n\t_id?:string;\r\n\tname:string;\r\n\temail:string;\r\n\tpassword:string;\r\n\tfamily?:string;\r\n\tage?:number;\r\n\trace?:string;\r\n\tfood?:string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\r\n// import { map } from 'rxjs/operators';\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n   readonly ROOT_URL;\r\n   authToken:any;\r\n   user:any;\r\n\r\n  constructor(private http:HttpClient) {\r\n  \tthis.ROOT_URL=\"http://localhost:8080/api/users\";\r\n    // this.ROOT_URL=\"api/users\";\r\n   }\r\n\r\n   registerUser(user) {\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(`${this.ROOT_URL}/register`, user, {headers: headers});\r\n\r\n  }\r\n\r\n  authenticateUser(user) {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(`${this.ROOT_URL}/authenticate`, user, {headers: headers});\r\n   \r\n   }\r\n\r\n   updateUser(user){\r\n\r\n     let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.put(`${this.ROOT_URL}/update-profile`, user, {headers: headers});\r\n   }\r\n\r\n   storeUserData(token, user) {\r\n    localStorage.setItem('id_token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n    return token;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  getProfile() {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n     \r\n    return this.http.get(`${this.ROOT_URL}/profile`, {headers: headers});\r\n   \r\n  }\r\n\r\n   getAllUsers(){\r\n    \r\n\r\n     let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n     \r\n    return this.http.get(`${this.ROOT_URL}/all-users`, {headers: headers});\r\n  }\r\n\r\n\r\n  logout() {\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n  }\r\n\r\n  isLoggedIn() {\r\n    const helper = new JwtHelperService();\r\n    this.loadToken();\r\n    \r\n    if(this.authToken==null)return false;\r\n    return !helper.isTokenExpired(this.authToken.replace(\"JWT \", \"\"));\r\n  \r\n  }\r\n\r\n  getUsername(){\r\n    return JSON.parse(localStorage.getItem('user'));\r\n    \r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FriendService {\r\n\r\n  readonly ROOT_URL;\r\n \r\n  constructor(private http:HttpClient) {\r\n  \tthis.ROOT_URL=\"http://localhost:8080/api/friends\";\r\n    // this.ROOT_URL=\"api/friends\";\r\n   }\r\n\r\n  addFriend(friend) {\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(`${this.ROOT_URL}/add-friend`, friend, {headers: headers});\r\n\r\n  }\r\n\r\n\r\n\r\n   getAllMyFriends(){\r\n    \r\n\r\n     let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n     \r\n    return this.http.get(`${this.ROOT_URL}/all-my-friends`, {headers: headers});\r\n  }\r\n\r\n  deleteFriend(friend){\r\n\r\n     let headers = new HttpHeaders();\r\n     headers.append('Content-Type', 'application/json');\r\n     return this.http.delete(`${this.ROOT_URL}/delete-friend/${friend._id}`);\r\n  }\r\n\r\n  addAnonymFriend(user){\r\n    \r\n    let headers=new HttpHeaders();\r\n\r\n    return this.http.post(`${this.ROOT_URL}/add-anonym-friend`, user, {headers: headers});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpRequest,HttpHandler,HttpEvent,HttpInterceptor} from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(public auth: AuthService) {}\r\n  \r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    \r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `${this.auth.loadToken()}`\r\n      }\r\n    });\r\n    return next.handle(request);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidateService {\r\n\r\n  constructor() { }\r\n\r\n  validateRegister(user) {\r\n    if(user.name == undefined || user.email == undefined  || user.password == undefined) {\r\n        return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validateEmail(email) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n\r\n  isValidLogin(user:any){\r\n    if(user.email==undefined || user.password==undefined)\r\n    {\r\n      return false;\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n  isValideUpdate(user){\r\n\r\n    if (user.name == undefined || user.email == undefined || user.age==undefined\r\n      || user.race==undefined || user.food==undefined || user.family==undefined) {\r\n        \r\n        return false;\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}